{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","components/statistics/Statistics.js","components/App.js","index.js"],"names":["FeedbackOptions","good","neutral","bad","type","name","onClick","Section","title","children","Notification","message","Statistics","total","positivePercentage","App","state","onHandleClick","e","target","setState","prevState","props","step","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"sOAuBeA,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OACtB,oCACE,4BAAQC,KAAK,SAASC,KAAK,OAAOC,QAASL,GAA3C,QAGA,4BAAQG,KAAK,SAASC,KAAK,UAAUC,QAASJ,GAA9C,WAGA,4BAAQE,KAAK,SAASC,KAAK,MAAMC,QAASH,GAA1C,SCKWI,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,iCACE,4BAAKD,GACJC,KCMQC,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,oCACE,4BAAKA,KC6BMC,EA9BI,SAAC,GAAD,IAAGX,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKU,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,0CACW,IAAVD,EACC,kBAAC,EAAD,CAAcF,QAAQ,sBAEtB,oCACE,mCAASV,GACT,sCAAYC,GACZ,kCAAQC,GACR,oCAAUU,GACV,gDAEGC,EAFH,QCVaC,E,2MACnBC,MAAQ,CACNf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAQPc,cAAgB,SAAAC,GACd,IAAMb,EAAOa,EAAEC,OAAOd,KACtB,EAAKe,UAAS,SAAAC,GAAS,sBACpBhB,EAAOgB,EAAUhB,GAAQ,EAAKiB,MAAMC,U,EAIzCC,mBAAqB,WACnB,OAAO,EAAKR,MAAMf,KAAO,EAAKe,MAAMd,QAAU,EAAKc,MAAMb,K,EAG3DsB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKX,MAAMf,KAAc,EAAKuB,uB,wEAIjD,OACE,oCACE,kBAAC,EAAD,CAAShB,MAAOoB,KAAKN,MAAMd,OACzB,kBAAC,EAAD,CACEP,KAAM2B,KAAKX,cACXf,QAAS0B,KAAKX,cACdd,IAAKyB,KAAKX,gBAEZ,kBAAC,EAAD,CACEhB,KAAM2B,KAAKZ,MAAMf,KACjBC,QAAS0B,KAAKZ,MAAMd,QACpBC,IAAKyB,KAAKZ,MAAMb,IAChBU,MAAOe,KAAKJ,qBACZV,mBAAoBc,KAAKH,0C,GAzCJI,aAAZd,EAOZe,aAAe,CACpBP,KAAM,EACNf,MAAO,yBCTXuB,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.979dd20c.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ good, neutral, bad }) => (\n  <>\n    <button type=\"button\" name=\"good\" onClick={good}>\n      Good\n    </button>\n    <button type=\"button\" name=\"neutral\" onClick={neutral}>\n      Neutral\n    </button>\n    <button type=\"button\" name=\"bad\" onClick={bad}>\n      Bad\n    </button>\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  good: PropTypes.func.isRequired,\n  neutral: PropTypes.func.isRequired,\n  bad: PropTypes.func.isRequired\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => (\n  <>\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  </>\n);\n\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => (\n  <>\n    <h2>{message}</h2>\n  </>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"../notification/Notification\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <h2>Statistics</h2>\n    {total === 0 ? (\n      <Notification message=\"No feedback given\" />\n    ) : (\n      <>\n        <p>Good:{good}</p>\n        <p>Neutral:{neutral}</p>\n        <p>Bad:{bad}</p>\n        <p>Total:{total}</p>\n        <p>\n          Positive feedback:\n          {positivePercentage}%\n        </p>\n      </>\n    )}\n\n    {}\n  </>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired\n};\n\nexport default Statistics;\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\nimport Section from \"./section/Section\";\nimport Statistics from \"./statistics/Statistics\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n\n  static defaultProps = {\n    step: 1,\n    title: \"Please leave feedback\"\n  };\n\n  onHandleClick = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + this.props.step\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    return (\n      <>\n        <Section title={this.props.title}>\n          <FeedbackOptions\n            good={this.onHandleClick}\n            neutral={this.onHandleClick}\n            bad={this.onHandleClick}\n          />\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n\nReactDOM.render(<App />,document.getElementById(\"root\"));\n"],"sourceRoot":""}